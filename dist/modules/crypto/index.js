/* yocto-mongoose - Utility tool to manage mongoose connection and auto loading models. - V2.2.0 */

"use strict";var _=require("lodash"),logger=require("yocto-logger"),utils=require("yocto-utils"),traverse=require("traverse");function Crypt(t,e){this.logger=t,this.algorithm="aes256",this.hashKey="",this.Types=e,this.modelProperties={}}Crypt.prototype.encrypt=function(t){if(t&&!this.isAlreadyCrypted(t)){this.logger.verbose(["[ YMongoose.cryto.encrypt ] - Starting encrypt process with algo [",this.algorithm,"] for data ",utils.obj.inspect(t)].join(" "));var e=utils.crypto.encrypt(this.hashKey,t,this.algorithm);if(e)return this.logger.verbose(["[ YMongoose.cryto.encrypt ] - Value was successfuly crypted to ",utils.obj.inspect(e)].join(" ")),e}return t},Crypt.prototype.decrypt=function(t){if(t){this.logger.verbose(["[ YMongoose.cryto.decrypt ] - Starting decrypt process with algo [",this.algorithm,"] for data ",utils.obj.inspect(t)].join(" "));var e=utils.crypto.decrypt(this.hashKey,t,this.algorithm);if(e)return this.logger.verbose(["[ YMongoose.cryto.decrypt ] - Value is crypted so decrypted value is",utils.obj.inspect(e)].join(" ")),e}return t},Crypt.prototype.isAlreadyCrypted=function(t){if(t&&(this.logger.verbose(["[ YMongoose.cryto.isAlreadyCrypted ] - Checking if given data [",utils.obj.inspect(t),"] is already crypted"].join(" ")),utils.crypto.decrypt(this.hashKey,t,this.algorithm)))return this.logger.verbose(["[ YMongoose.cryto.isAlreadyCrypted ] - Given data",utils.obj.inspect(t),"is already crypted. Skipping this process !"].join(" ")),!0;return!1},Crypt.prototype.setAlgorithmAndKey=function(t){return this.algorithm=_.get(t,"hashType")||this.algorithm,this.hashKey=_.get(t,"hashKey")||this.hashKey,this},Crypt.prototype.prepare=function(r){return r&&_.isObject(r)?_.isDate(r)||_.isRegExp(r)?r:_.isArray(r)?_.map(r,this.prepare.bind(this)):_.has(r,"isJoi")?r:_.reduce(Object.keys(r),function(t,e){return t[e]=this.prepare(r[e]),t=this.addDefaultSettersAndGetters(r,e,t),t=this.processAndCheckTypeForSetterAndGetters(r,e,t)}.bind(this),{}):r},Crypt.prototype.addDefaultSettersAndGetters=function(t,e,r){return _.has(t[e],"ym_crypt")&&_.get(t[e],"ym_crypt")&&(_.set(r[e],"set",function(t){return this.encrypt(t)}.bind(this)),_.set(r[e],"get",function(t){return this.decrypt(t)}.bind(this))),r},Crypt.prototype.processAndCheckTypeForSetterAndGetters=function(r,i,t){return _.has(r[i],"type")&&(_.isArray(_.get(r[i],"type"))?_.set(t[i],"get",function(t){return _.isUndefined(t)||_.isEmpty(t)?t:this.remapNestedArray(t.toObject())}.bind(this)):_.isPlainObject(_.get(r[i],"type"))&&_.each(["set","get"],function(e){_.set(t[i],e,function(t){return _.isPlainObject(t)&&(t=this.walkDeepPlainObject(t,_.get(r[i],"type"),"set"===e)),t}.bind(this))}.bind(this))),t},Crypt.prototype.walkDeepPlainObject=function(s,n,o){return _.map(traverse(s).paths(),function(t){var e=1<_.size(t)?[t.join(".type."),"ym_crypt"].join("."):[t].join(".ym_crypt");e=(e=e.replace(/(type\.\d\.type)/g,"type.0")).replace(/(\.\d\.)/g,".0.");var r=_.result(n,e);if(_.isBoolean(r)&&r||_.has(r,"ym_crypt")&&_.get(r,"ym_crypt")){var i=_.result(s,t);o?i=this.isAlreadyCrypted(i)?this.decrypt(i):this.encrypt(i):this.isAlreadyCrypted(i)&&(i=this.decrypt(i)),_.set(s,t,i)}}.bind(this)),s},Crypt.prototype.remapNestedArray=function(t,i,s){return i=!_.isUndefined(i)&&i,s=!_.isUndefined(s)&&s,_.map(t,function(t){return!this.Types.ObjectId.isValid(t)&&_.isPlainObject(t)?_.mapValues(t,function(t,e){if(_.isArray(t)&&!_.isEmpty(t))return this.remapNestedArray(t,i,s);var r=i?"encrypt":"decrypt";return _.includes(["_id","__v"],e)||s?t:this[r](t)}.bind(this)):t}.bind(this))},Crypt.prototype.saveModelProperties=function(t){this.modelProperties=t},Crypt.prototype.prepareCryptQuery=function(s){var i=function(t,e){if(!_.get(s,t.join("."))&&!_.isEmpty(e)){var r=_.slice(e,0,1);return t.push(_.first(r)),i(t,_.drop(e))}return t.join(".")};if(!_.isPlainObject(s))return s;var n=s,r=[];_.each(Object.keys(s),function(t){if(_.includes(t,".")){var e={};e[t]=s[t],r.push(e),delete s[t]}});var o=_.uniq(_.flatten(_.compact(_.map(traverse(s).paths(),function(t){return t.join(".")}))));if(_.includes(o.join(""),"$")){var t=_.uniq(_.compact(_.map(o,function(t){return!!_.includes(t,"$")&&t.split(".")})));t=_.uniq(_.map(t,function(t){var e=_.slice(t,0,1);return i(e,_.difference(t,e))})),r=_.union(r,_.map(t,function(e){var t={};return _.set(t,e,_.get(s,e)),o=_.compact(_.map(o,function(t){return!_.startsWith(t,e)&&t})),t}))}return s=_.reduce(_.compact(_.map(_.map(o,function(t){var e={};return e[t]=_.get(s,t),e}),function(t){var e=_.first(Object.keys(t)),r=_.first(_.values(t));return!(_.isObject(e)||_.isObject(r)||_.isObject(r)||_.isObject(r))&&t})),function(t,e){return _.merge(t,e)}),s=_.mapValues(s,function(t,e){var r=e.replace(/\./g,".type."),i=_.get(this.modelProperties,r);return _.has(i,"ym_crypt")&&_.get(i,"ym_crypt")&&(t=this.isAlreadyCrypted(t)?this.decrypt(t):this.encrypt(t)),t}.bind(this)),_.each(s,function(t,e){var r=_.first(_.split(e,".")),i=_.get(n,r);_.isString(i)||_.isUndefined(i)||(delete s[e],_.merge(s,_.set({},e,t)))}),_.each(r,function(t){_.merge(s,t)}),console.log(utils.obj.inspect(s)),s},module.exports=function(t,e){return(_.isUndefined(t)||_.isNull(t))&&(logger.warning("[ Crypt.constructor ] - Invalid logger given. Use internal logger"),t=logger),new Crypt(t,e)};